tapply(X=(cset.entropy.4.8$Evaluations), INDEX=list(cset.entropy.4.8$Played))
tapply(X=(cset.entropy.4.8$Played), INDEX=list(cset.entropy.4.8$Evaluations))
tapply(X=(cset.most.4.8$Played), INDEX=list(cset.most.4.8$Evaluations))
tapply(X=(cset.most.4.8$Evaluations), INDEX=list(cset.most.4.8$Played))
(tapply(X=(cset.most.4.8$Played), INDEX=list(cset.most.4.8$Evaluations), FUN=mean)
)
tapply(X=(cset.entropy.4.8$Played), INDEX=list(cset.entropy.4.8$Evaluations), FUN=mean
)
tapply(X=(cset.entropy.4.8$Evaluations), INDEX=list(cset.entropy.4.8$Played), FUN=mean)
source('plot-csets-me-4-8.R')
hist(most1.4.8$Played, plot=F,breaks=c(seq(0,8)))
hist(most1.4.8$Played)
hist(most1.4.8$Played,plot=F,breaks=c(seq(0,9)))
h.most1.4.8 <- hist(most1.4.8$Played,plot=F,breaks=c(seq(0,9)))
h.entropy1.4.8 <- hist(entropy1.4.8$Played,plot=F,breaks=c(seq(0,9)))
source('plot-histo-me-4-8.R')
source('plot-histo-me-4-8.R')
source('plot-histo-me-4-8.R')
source('plot-histo-me-4-8.R')
summary(entropy1.4.8)
summary(most1.4.8)
quit()
n
postscript('histo-me-4-8.eps',horizontal=F,width=4,height=4,paper='special')
source('plot-histo-me-4-8.R')
h.entropy1.4.8 <- hist(entropy1.4.8$Played,plot=F,breaks=c(seq(0,9)))
h.most1.4.8 <- hist(most1.4.8$Played,plot=F,breaks=c(seq(0,9)))
source('plot-histo-me-4-8.R')
dev.off()
quit()
tops.entropy.4.6 <- read.csv('tops-entropy1-4-6.dat')
tops.most.4.6 <- read.csv('tops-most1-4-6.dat')
tops.plus.4.6 <- read.csv('tops-plus-4-6.dat')
tapply(X=(tops.entropy.4.6$Size), INDEX=list(tops.entropy.4.6$Size), FUN=mean)
tapply(X=(tops.entropy.4.6$Size), INDEX=list(tops.entropy.4.6$Move), FUN=mean)
tapply(X=(tops.most.4.6$Size), INDEX=list(tops.most.4.6$Move), FUN=mean)
tapply(X=(tops.plus.4.6$Size), INDEX=list(tops.plus.4.6$Move), FUN=mean)
quit()
summary(entropy1.4.8)
summary(most1.4.8)
wilcox.test(most1.4.8$Played, entropy1.4.8$Played,paired=T)
load('plot-histo-me-4-8.R')
source('plot-histo-me-4-8.R')
quit()
n
h.entropy1.4.8$counts
h.most1.4.8$counts
quit()
n
cset.most1.4.8
cset.entropy1.4.8
cset.entropy.4.8 <- read.csv('csets-entropy1-4-8.dat')
tapply(X=(cset.entropy.4.8$Evaluations), INDEX=list(cset.entropy.4.8$Played), FUN=mean)
tapply(X=(cset.most1.4.8$Evaluations), INDEX=list(cset.most1.4.8$Played), FUN=mean)
tapply(X=(cset.most1.4.8$Played), INDEX=list(cset.most1.4.8$Evaluations), FUN=mean)
quit()
plot(tapply(X=(cset.most.4.8$Played), INDEX=list(cset.most.4.8$Evaluations), FUN=mean),type="l", lty='dashed',
     ylab='Average size',xlab='Moves',
     main='Remaining combinations',
     col='red',
     sub='histogram',log='y')
lines(tapply(X=(cset.entropy1.4.8$Evaluations), INDEX=list(cset.entropy1.4.8$Played), FUN=mean),col='black')
quit()
n
cset.entropy.4.8 <- read.csv('csets-entropy1-4-8.dat')
lines(tapply(X=(cset.entropy1.4.8$Evaluations), INDEX=list(cset.entropy1.4.8$Played), FUN=mean),col='black')
lines(tapply(X=(cset.entropy.4.8$Evaluations), INDEX=list(cset.entropy.4.8$Played), FUN=mean),col='black')
source('plot-histo-me-4-8.R')
source('plot-csets-me-4-8.R')
source('plot-csets-me-4-8.R')
source('plot-csets-me-4-8.R')
wilcox.test(cset.entropy.4.6[cset.entropy.4.6$Evaluations==2,]$Played, cset.most.4.6[cset.most.4.6$Evaluations==2,]$Played,paired=T)
wilcox.test(cset.entropy.4.8[cset.entropy.4.8$Evaluations==2,]$Played, cset.most.4.8[cset.most.4.8$Evaluations==2,]$Played,paired=T)
wilcox.test(cset.entropy.4.8[cset.entropy.4.8$Evaluations==2,]$Played, cset.most1.4.8[cset.most1.4.8$Evaluations==2,]$Played)
wilcox.test(cset.entropy.4.8[cset.entropy.4.8$Evaluations==3,]$Played, cset.most1.4.8[cset.most1.4.8$Evaluations==3,]$Played)
postscript('csets-me-4-8.eps',horizontal=F,width=4,height=4,paper='special')
source('plot-csets-me-4-8.R')
dev.off()
quit()
tapply(X=(cset.most1.4.8$Played), INDEX=list(cset.most1.4.8$Evaluations)
)
tapply(X=(cset.entropy.4.8$Played), INDEX=list(cset.entropy.4.8$Evaluations), FUN=mean)
tapply(X=(cset.entropy.4.8$Played), INDEX=list(cset.entropy.4.8$Evaluations), FUN=sd)
tapply(X=(cset.most.4.8$Played), INDEX=list(cset.most.4.8$Evaluations), FUN=sd)
tapply(X=(cset.most1.4.8$Played), INDEX=list(cset.most1.4.8$Evaluations), FUN=sd)
tapply(X=(cset.most1.4.8$Played), INDEX=list(cset.most1.4.8$Evaluations), FUN=mean)
quit()
n
plus2.4.6.all <- read.csv('res-plus2-4-6-all.dat')
plus3.4.6.all <- read.csv('res-plus3-4-6-all.dat')
summary(plus2.4.6.all)
summary(plus3.4.6.all)
summary(plus.4.6.all)
summary(most1.4.6.all)
quit()
most1.4.6.x30 <- read.csv('res-most1-4-6x30.dat')
summary(most1.4.6.x30)
quit()
most1.4.6.x30 <- read.csv('res-most1-4-6x30.dat')
summary(most1.4.6.x30)
summary(most1.4.6.all)
summary(most1.4.6.new)
quit()
entropy1.4.6.x30 <- read.csv('res-entropy1-4-6x30.dat')
summary(entropy1.4.6.x30)
summary(most1.4.6.x30)
wilcox.test( entropy1.4.6.x30$Played, most1.4.6.x30$Played, paired=T)
quit()
ls()
quit()
n
quit()
n
postscript('top-me-4-8.eps',horizontal=F,width=4,height=4,paper='special')
source('plot-top-me-4-8.R')
dev.off()
quit()
tapply(X=(cset.in.most1.4.8$Move), INDEX=list(cset.in.most1.4.8$IsIn), FUN=mean)
tapply(X=(cset.in.most1.4.8$IsIn), INDEX=list(cset.in.most1.4.8$Move), FUN=mean)
tapply(X=(cset.in.entropy1.4.8$IsIn), INDEX=list(cset.in.entropy1.4.8$Move), FUN=mean)
quit()
n
plus2.4.8 <- read.csv('res-plus2-4-8.dat')
summary(plus2.4.8)
summary(plus.4.8)
summary(entropy1.4.8)
wilcox.test( entropy1.4.8$Played, plus2.4.8$Played, paired=T)
wilcox.test( entropy1.4.8$Played, plus.4.8$Played, paired=T)
wilcox.test( most1.4.8$Played, plus.4.8$Played, paired=T)
wilcox.test( most1.4.8$Played, plus2.4.8$Played, paired=T)
quit()
tapply(X=(cset.plus.4.6$Played), INDEX=list(cset.plus.4.6$Evaluations), FUN=mean),col='green',lty='dotted'
 tapply(X=(cset.plus.4.6$Played), INDEX=list(cset.plus.4.6$Evaluations)
)
tapply(X=(cset.plus.4.6$Played), INDEX=list(cset.plus.4.6$Evaluations), FUN=mean)
tapply(X=(cset.most.4.6$Played), INDEX=list(cset.most.4.6$Evaluations), FUN=mean)
cset.in.plus.4.6
tapply(X=(cset.in.most1.4.8$IsIn), INDEX=list(cset.in.most1.4.8$Move), FUN=mean)
tapply(X=(cset.in.plus.4.8$IsIn), INDEX=list(cset.in.plus.4.8$Move), FUN=mean)
cset.in.plus2.4.6 <- read.csv('cset-in-plus2-4-6.dat')
postscript('top-plus-4-6.eps',horizontal=F,width=4,height=4,paper='special')
source('plot-top-plus.R')
dev.off()
 cset.in.plus2.4.8 <- read.csv('cset-in-plus2-4-8.dat')
 cset.in.plus.4.8 <- read.csv('cset-in-plus-4-8.dat')
cset.plus2.4.8 <- read.csv('csets-plus2-4-8.dat')
postscript('top-plus-4-8.eps',horizontal=F,width=4,height=4,paper='special')
dev.off()
postscript('csets-plus-4-8.eps',horizontal=F,width=4,height=4,paper='special')
dev.off()
postscript('csets-plus-4-8.eps',horizontal=F,width=4,height=4,paper='special')
dev.off()
source('plot-csets-plus.R')
source('plot-csets-plus-4-8.R')
tapply(X=(cset.in.plus.4.6$IsIn), INDEX=list(cset.in.plus.4.6$Move), FUN=mean)
wilcox.test(cset.entropy.4.6[cset.entropy.4.6$Evaluations==2,]$Played, cset.plus.4.6[cset.plus.4.6$Evaluations==2,]$Played,paired=T)
wilcox.test(cset.entropy.4.6[cset.entropy.4.6$Evaluations==2,]$Played, cset.plus.4.6[cset.plus.4.6$Evaluations==2,]$Played)
wilcox.test(cset.entropy.4.6[cset.entropy.4.6$Evaluations==3,]$Played, cset.plus.4.6[cset.plus.4.6$Evaluations==3,]$Played)
wilcox.test(cset.entropy.4.6[cset.entropy.4.6$Evaluations==4,]$Played, cset.plus.4.6[cset.plus.4.6$Evaluations==4,]$Played)
wilcox.test(cset.entropy.4.6[cset.entropy.4.6$Evaluations==5,]$Played, cset.plus.4.6[cset.plus.4.6$Evaluations==5,]$Played)
wilcox.test(cset.entropy.4.6[cset.entropy.4.6$Evaluations==4,]$Played, cset.plus2.4.6[cset.plus2.4.6$Evaluations==4,]$Played)
wilcox.test(cset.in.entropy1.4.6[cset.in.entropy1.4.6$Evaluations==4,]$Played, cset.in.plus2.4.6[cset.in.plus2.4.6$Evaluations==4,]$Played)
wilcox.test(cset.in.entropy1.4.6[cset.in.entropy1.4.6$Played==4,]$IsIn, cset.in.plus2.4.6[cset.in.plus2.4.6$Played==4,]$IsIn)
cset.in.entropy1.4.6[cset.in.entropy1.4.6$Played==4,]$IsIn
cset.in.entropy1.4.6[cset.in.entropy1.4.6$Played==3,]$IsIn
cset.in.entropy1.4.6[cset.in.entropy1.4.6$Played==3,]
cset.in.entropy1.4.6
wilcox.test(cset.in.entropy1.4.6[cset.in.entropy1.4.6$Move==4,]$IsIn, cset.in.plus2.4.6[cset.in.plus2.4.6$Move==4,]$IsIn)
cset.in.entropy1.4.6[cset.in.entropy1.4.6$Move==4,]
cset.in.entropy1.4.6[cset.in.entropy1.4.6$Move==0]
cset.in.entropy1.4.6[cset.in.entropy1.4.6$Move==0,]
wilcox.test(cset.in.entropy1.4.6[cset.in.entropy1.4.6$Move==0,]$IsIn, cset.in.plus2.4.6[cset.in.plus2.4.6$Move==0,]$IsIn)
wilcox.test(cset.in.entropy1.4.6[cset.in.entropy1.4.6$Move==1,]$IsIn, cset.in.plus2.4.6[cset.in.plus2.4.6$Move==1,]$IsIn)
wilcox.test(cset.in.entropy1.4.6[cset.in.entropy1.4.6$Move==2,]$IsIn, cset.in.plus2.4.6[cset.in.plus2.4.6$Move==2,]$IsIn)
tapply(X=(cset.in.plus.4.6$IsIn), INDEX=list(cset.in.plus.4.6$Move), FUN=mean)
tapply(X=(cset.in.plus2.4.6$IsIn), INDEX=list(cset.in.plus2.4.6$Move), FUN=mean)
summary(plus.4.8)
summary(plus2.4.8)
summary(plus3.4.8)
wilcox.test( plus2.4.8$Played, entropy1.4.8$Played, paired=T)
wilcox.test( plus.4.8$Played, entropy1.4.8$Played, paired=T)
wilcox.test( most1.4.8$Played, entropy1.4.8$Played, paired=T)
wilcox.test( most1.4.8$Played, plus.4.8$Played, paired=T)
wilcox.test( most1.4.8$Played, plus2.4.8$Played, paired=T)
summary(plus.5.6)
summary(entropy1.5.6)
summary(entropy.5.6)
summary(most.5.6)
summary(most1.5.6)
tapply(X=(cset.plus.4.8$Played), INDEX=list(cset.plus.4.8$Evaluations), FUN=mean)
tapply(X=(cset.plus2.4.8$Played), INDEX=list(cset.plus2.4.8$Evaluations), FUN=mean)
tapply(X=(cset.entropy1.4.8$Played), INDEX=list(cset.entropy1.4.8$Evaluations), FUN=mean)
tapply(X=(cset.entropy.4.8$Played), INDEX=list(cset.entropy.4.8$Evaluations), FUN=mean)
quit()
y
plot(cumsum(h.entropy1.4.6.all$counts) ~ c(0:7),type="l",
lines(cumsum(h.most1.4.6.all$counts) ~ c(0:7),col='red',lty='dashed')
h.entropy1.4.6.all$counts
h.most1.4.6.all$counts
plot(h.entropy1.4.6.all$counts ~ c(1:7),type="l",
     ylab='Count',xlab='Moves',
     main='Times solved after N games')
h.entropy1.4.6.all
h.entropy1.4.6.all <- hist(entropy1.4.6.all$Played, plot=F,breaks=c(seq(0,7)))
h.most1.4.6.all <- hist(most1.4.6.all$Played, plot=F,breaks=c(seq(0,7)))
h.entropy1.4.6.all
ç
postscript('histo-me.eps',horizontal=F,width=4,height=4,paper='special')
h.entropy1.4.8
h.most1.4.8
dev.off()
postscript('histo-me.eps',horizontal=F,width=4,height=4,paper='special')
dev.off()
postscript('csets-plus-4-8.eps',horizontal=F,width=4,height=4,paper='special')
dev.off()
postscript('top-plus-4-8.eps',horizontal=F,width=4,height=4,paper='special')
dev.off()
quit()
y
most.48.c <- read.table('res-most1-4-8-c.dat')
entropy.48.c <- read.table('res-entropy1-4-8-c.dat')
plus.48.c <- read.table('res-plus-4-8-c.dat')
plus2.48.c <- read.table('res-plus2-4-8-c.dat')
summary(plus2.48.c)
plus2.48.c <- read.csv('res-plus2-4-8-c.dat')
summary(plus2.48.c)
plus.48.c <- read.csv('res-plus-4-8-c.dat')
entropy.48.c <- read.csv('res-entropy1-4-8-c.dat')
summary(plus.48.c)
summary(entropy.48.c)
summary(most.48.c)
wilcox.test( most.48.c$Played, entropy.48.c$Played)
wilcox.test( most.48.c$Played, entropy.48.c$Played,paired=T)
wilcox.test( most.48.c$Played, plus.48.c$Played,paired=T)
wilcox.test( most.48.c$Played, plus2.48.c$Played,paired=T)
wilcox.test( entropy.48.c$Played, plus2.48.c$Played,paired=T)
wilcox.test( entropy.48.c$Played, plus.48.c$Played,paired=T)
quit()
h.most.48.c <- hist(most.48.c$Played,plot=F,breaks=c(seq(0,9)))
h.entropy.48.c <- hist(entropy.48.c$Played,plot=F,breaks=c(seq(0,9)))
h.plus.48.c <- hist(plus.48.c$Played,plot=F,breaks=c(seq(0,9)))
h.plus2.48.c <- hist(plus2.48.c$Played,plot=F,breaks=c(seq(0,9)))
h.plus.48.c$counts
h.plus2.48.c$counts
h.entropy.48.c$counts
h.most.48.c$counts
sum(h.entropy.48.c$counts)
sum(h.plus.48.c$counts)
plot(h.plus2.48.c$counts)
plot(h.plus2.48.c$counts,type='o')
lines(h.entropy.48.c$counts,type='o')
plot(h.plus2.48.c$counts,type='o')
lines(h.entropy.48.c$counts,type='o',col='red',type='dash')
lines(h.entropy.48.c$counts,type='o',col='red',lty='dash')
lines(h.entropy.48.c$counts,type='o',col='red',lty='dotdash')
plot(cumsum(h.plus2.48.c$counts),type='o')
lines(cumsum(h.entropy.48.c$counts),type='o',col='red',lty='dotdash')
cset.in.entropy.48.c <- read.csv('cset-in-entropy1-4-8-c.dat')
cset.in.plus2.48.c <- read.csv('cset-in-plus2-4-8-c.dat')
tapply(X=(cset.in.plus2.48.c$IsIn), INDEX=list(cset.in.plus2.48.c$Move), FUN=mean)
tapply(X=(cset.in.entropy.48.c$IsIn), INDEX=list(cset.in.entropy.48.c$Move), FUN=mean)
quit()
quit()
n
summary(entropy.48.c)
sd(entropy.48.c$Played)/sqrt(5000)
summary(most.48.c)
sd(most.48.c$Played)/sqrt(5000)
h.most.48.c$count
h.entropy.48.c$count
plot(h.entropy.48.c$counts ~ c(1:8),type="o",
     ylab='Count',xlab='Moves',
     main='Histogram: moves to solution, l=4 K=8')
h.entropy.48.c <- hist(entropy.48.c$Played,plot=F,breaks=c(seq(0,8)))
h.most.48.c <- hist(most.48.c$Played,plot=F,breaks=c(seq(0,8)))
h.entropy.48.c$count
h.most.48.c$count
postscript('histo-me-4-8.eps',horizontal=F,width=4,height=4,paper='special')
dev.off()
t.test(most.48.c$Played,mu=5.167)
summary(most.48.c$Played)
wilcox.test(most.48.c$Played,mu=5.167)
wilcox.test(most.48.c$Played,entropy.48.c$Played)
wilcox.test(most.48.c$Played,entropy.48.c$Played,paired=T)
wilcox.test(most.48.c$Played,plus.48.c$Played,paired=T)
wilcox.test(most.48.c$Played,plus.48.c$Played)
wilcox.test(most.48.c$Played,plus2.48.c$Played)
wilcox.test(most.48.c$Played,plus2.48.c$Played,paired=T)
wilcox.test(.48.c$Played,plus2.48.c$Played,paired=T)
wilcox.test(entropy.48.c$Played,plus2.48.c$Played,paired=T)
wilcox.test(entropy.48.c$Played,plus2.48.c$Played)
cset.entropy.48.c <- read.csv('csets-entropy1-4-8-c.dat')
cset.most.48.c <- read.csv('csets-most1-4-8-c.dat')
cset.plus.48.c <- read.csv('csets-plus-4-8-c.dat')
cset.plus2.48.c <- read.csv('csets-plus2-4-8-c.dat')
dev.off()
postscript('csets-me-4-8.eps',horizontal=F,width=4,height=4,paper='special')
dev.off()
cset.in.entropy.48.c
plot(tapply(X=(cset.in.most.48.c$IsIn), INDEX=list(cset.in.most.48.c$Move), FUN=mean),type="l", lty='dashed',
     ylab='Probability',xlab='Moves', ylim=c(0,1),
     main='Probability secret code in top scorers, l=4, c=8',
     col='red')
cset.in.most.48.c <- read.csv('cset-in-most1-4-8-c.dat')
cset.in.plus2.48.c <- read.csv('cset-in-plus2-4-8-c.dat')
tapply(X=(cset.in.most.48.c$IsIn), INDEX=list(cset.in.most.48.c$Move), FUN=mean)
tapply(X=(cset.in.entropy.48.c$IsIn), INDEX=list(cset.in.entropy.48.c$Move), FUN=mean)
postscript('top-plus-4-8.eps',horizontal=F,width=4,height=4,paper='special')
dev.off()
postscript('top-plus-4-8.eps',horizontal=F,width=4,height=4,paper='special')
dev.off()
postscript('top-me-4-8.eps',horizontal=F,width=4,height=4,paper='special')
dev.off()
cset.in.plus.48.c <- read.csv('cset-in-plus-4-8-c.dat')
postscript('top-plus-4-8.eps',horizontal=F,width=4,height=4,paper='special')
dev.off()
postscript('top-plus-4-8.eps',horizontal=F,width=4,height=4,paper='special')
dev.off()
postscript('top-plus-4-8.eps',horizontal=F,width=4,height=4,paper='special')
dev.off()
postscript('top-plus-4-8.eps',horizontal=F,width=4,height=4,paper='special')
dev.off()
postscript('top-plus-4-8.eps',horizontal=F,width=4,height=4,paper='special')
dev.off()
postscript('top-plus-4-8.eps',horizontal=F,width=4,height=4,paper='special')
dev.off()
plus2.48.abca <- read.csv('res-plus2-4-8-abca.dat')
summary(plus2.48.abca)
summary(plus2.48.c)
summary(entropy.48.c)
wilcox.test(entropy.48.c$Played, plus2.48.abca$Played, paired=T)
wilcox.test(plus2.48.c$Played, plus2.48.abca$Played, paired=T)
wilcox.test(plus.48.c$Played, plus2.48.abca$Played, paired=T)
wilcox.test(most.48.c$Played, plus2.48.abca$Played, paired=T)
cset.in.entropy.48.abca <- read.csv('cset-in-enbropy1-4-8-abca.dat')
cset.in.entropy.48.abca <- read.csv('cset-in-entropy1-4-8-abca.dat')
cset.in.entropy.48.abca <- read.csv('cset-in-entropy-4-8-abca.dat')
csets.entropy.48.abca <- read.csv('csets--entropy1-4-8-abca.dat')
csets.entropy.48.abca <- read.csv('csets-entropy-4-8-abca.dat')
csets.entropy.48.abca <- read.csv('csets-entropy1-4-8-abca.dat')
csets.plus2.48.abca <- read.csv('csets-plus2-4-8-abca.dat')
entropy.48.abca <- read.csv('res-entropy1-4-8-abca.dat')
summary( entropy.48.abca)
summary( plus2.48.abca)
h.entropy.48.abca <- hist(entropy.48.abca$Played,plot=F,breaks=c(seq(0,8)))
h.plus2.48.abca <- hist(plus2.48.abca$Played,plot=F,breaks=c(seq(0,8)))
 >tapply(X=(cset.entropy.48.abca$Played), INDEX=list(cset.entropy.48.abca$Evaluations), FUN=mean)
tapply(X=(cset.entropy.48.abca$Played), INDEX=list(cset.entropy.48.abca$Evaluations), FUN=mean)
tapply(X=(cset.entropy1.48.abca$Played), INDEX=list(cset.entropy1.48.abca$Evaluations), FUN=mean)
tapply(X=(csets.entropy.48.abca$Played), INDEX=list(csets.entropy.48.abca$Evaluations), FUN=mean)
tapply(X=(csets.plus2.48.abca$Played), INDEX=list(csets.plus2.48.abca$Evaluations), FUN=mean)
quit()
y
cset.in.entropy.48.abca <- read.csv('cset-in-entropy-4-8-abca.dat')
cset.in.entropy.48.abca <- read.csv('cset-in-entropy1-4-8-abca.dat')
cset.in.plus2.48.abca <- read.csv('cset-in-plus2-4-8-abca.dat')
tapply(X=(cset.in.entropy.48.abca$IsIn), INDEX=list(cset.in.entropy.48.abca$Move), FUN=mean)
tapply(X=(cset.in.plus2.48.abca$IsIn), INDEX=list(cset.in.plus2.48.abca$Move), FUN=mean)
cset.prob.plus2.48.abca <- read.csv('cset-prob-plus2-4-8-abca.dat')
cset.prob.entropy.48.abca <- read.csv('cset-prob-entropy-4-8-abca.dat')
tapply(X=(cset.prob.plus2.48.abca$IsIn), INDEX=list(cset.prob.plus2.48.abca$Move), FUN=mean)
tapply(X=(cset.prob.entropy.48.abca$IsIn), INDEX=list(cset.prob.entropy.48.abca$Move), FUN=mean)
quit()
wilcox.test(cset.prob.entropy.48.abca[$Move==1,]cset.prob.entropy.48.abca$IsIn, cset.prob.plus2.48.abca[cset.prob.plus2.48.abca$Move==1,]$IsIn)
wilcox.test(cset.prob.entropy.48.abca[cset.prob.entropy.48.abca$Move==1,]cset.prob.entropy.48.abca$IsIn, cset.prob.plus2.48.abca[cset.prob.plus2.48.abca$Move==1,]$IsIn)
wilcox.test(cset.prob.entropy.48.abca[cset.prob.entropy.48.abca$Move==1,],cset.prob.entropy.48.abca$IsIn, cset.prob.plus2.48.abca[cset.prob.plus2.48.abca$Move==1,]$IsIn)
wilcox.test(cset.prob.entropy.48.abca[cset.prob.entropy.48.abca$Move==1,]$IsIn, cset.prob.plus2.48.abca[cset.prob.plus2.48.abca$Move==1,]$IsIn)
wilcox.test(cset.prob.entropy.48.abca[cset.prob.entropy.48.abca$Move==2,]$IsIn, cset.prob.plus2.48.abca[cset.prob.plus2.48.abca$Move==2,]$IsIn)
wilcox.test(cset.prob.entropy.48.abca[cset.prob.entropy.48.abca$Move==3,]$IsIn, cset.prob.plus2.48.abca[cset.prob.plus2.48.abca$Move==3,]$IsIn)
wilcox.test(cset.prob.entropy.48.abca[cset.prob.entropy.48.abca$Move==4,]$IsIn, cset.prob.plus2.48.abca[cset.prob.plus2.48.abca$Move==4,]$IsIn)
cset.prob.entropy.48.abca[cset.prob.entropy.48.abca$Move==4,]$IsIn
cset.prob.plus2.48.abca[cset.prob.plus2.48.abca$Move==4,]$IsIn
summary(cset.prob.plus2.48.abca[cset.prob.plus2.48.abca$Move==4,]$IsIn)
summary(cset.prob.plus2.48.abca[cset.prob.plus2.48.abca$Move==4,]$IsIn)
summary(cset.prob.entropy.48.abca[cset.prob.entropy.48.abca$Move==4,]$IsIn)
cset.prob.entropy.48.c <- read.csv('cset-prob-entropy-4-8-c.dat')
cset.prob.plus2.48.c <- read.csv('cset-prob-plus2-4-8-c.dat')
plot(tapply(X=(cset.prob.entropy.48.c$IsIn), INDEX=list(cset.in.entropy.48.c$Move), FUN=mean),type="o", 
     ylab='Probability',xlab='Moves', ylim=c(0,0.6),
     main='Prob drawing secret code ', sub='l=4, c=8')
lines(tapply(X=(cset.prob.entropy.48.abca$IsIn), INDEX=list(cset.prob.entropy.48.abca$Move), FUN=mean),col='brown',lty='dotdash',type="o")
lines(tapply(X=(cset.prob.plus2.48.c$IsIn), INDEX=list(cset.prob.plus2.48.c$Move), FUN=mean),col='blue',lty='dash',type="o")
lines(tapply(X=(cset.prob.plus2.48.c$IsIn), INDEX=list(cset.prob.plus2.48.c$Move), FUN=mean),col='blue',lty='dashed',type="o")
lines(tapply(X=(cset.prob.plus2.48.abca$IsIn), INDEX=list(cset.prob.plus2.48.abca$Move), FUN=mean),col='pink',lty='dotted',type="o")
postscript('prob-secret.eps',horizontal=F,width=4,height=4,paper='special')
dev.off()
postscript('prob-secret.eps',horizontal=F,width=4,height=4,paper='special')


dev.off()
prob.plus2.46 <- read.csv('prob-plus2-4-6.dat')
prob.plus.46 <- read.csv('prob-plus-4-6.dat')
prob.plus3.46 <- read.csv('prob-plus3-4-6.dat')
prob.entropy.46 <- read.csv('prob-entropy-4-6.dat')
prob.entropy.46 <- read.csv('prob-entropy-4.6.dat')
prob.most.46 <- read.csv('prob-most-4-6.dat')
prob.entropy.46
postscript('prob-secret-46.eps',horizontal=F,width=4,height=4,paper='special')
dev.off()
wilcox.test(prob.entropy.46[prob.entropy.46$Move==4,]$Prob, prob.plus2.46[prob.plus2.46$Move==4,]$Prob)
wilcox.test(prob.entropy.46[prob.entropy.46$Move==3,]$Prob, prob.plus2.46[prob.plus2.46$Move==3,]$Prob)
wilcox.test(prob.entropy.46[prob.entropy.46$Move==2,]$Prob, prob.plus2.46[prob.plus2.46$Move==2,]$Prob)
wilcox.test(prob.entropy.46[prob.entropy.46$Move==2,]$Prob, prob.most.46[prob.most.46$Move==2,]$Prob)
wilcox.test(prob.entropy.46[prob.entropy.46$Move==3,]$Prob, prob.most.46[prob.most.46$Move==3,]$Prob)
summary(prob.entropy.46[prob.entropy.46$Move == 2, ]$Prob)
summary(prob.plus2.46[prob.plus2.46$Move == 2, ]$Prob)
wilcox.test(prob.most.46[prob.most.46$Move==2,]$Prob, prob.plus2.46[prob.plus2.46$Move==2,]$Prob)
wilcox.test(prob.most.46[prob.most.46$Move==1,]$Prob, prob.plus2.46[prob.plus2.46$Move==1,]$Prob)
summary(prob.most.46[prob.most.46$Move == 2, ]$Prob)
summary(prob.most.46[prob.most.46$Move == 1, ]$Prob)
summary(prob.plus2.46[prob.plus2.46$Move == 1, ]$Prob)
quit()
y
cumsum(h.entropy1.4.6.all$counts) - cumsum(h.most1.4.6.all$counts)
plot(cumsum(h.entropy1.4.6.all$counts) - cumsum(h.most1.4.6.all$counts))
plot(cumsum(h.entropy1.4.6.all$counts) - cumsum(h.most1.4.6.all$counts),type='o')
plot(cumsum(h.entropy1.4.6.all$counts) - cumsum(h.most1.4.6.all$counts),type='o',xlab='Move', ylab='Entropy - Most Parts',main='Cumulative difference')
postscript('cumsum-dif-46.eps',horizontal=F,width=4,height=4,paper='special')
plot(cumsum(h.entropy1.4.6.all$counts) - cumsum(h.most1.4.6.all$counts),type='o',xlab='Move', ylab='Entropy - Most Parts',main='Cumulative difference')
dev.off()
postscript('cumsum-46.eps',horizontal=F,width=4,height=4,paper='special')
dev.off()
plot(h.entropy1.4.6.all$counts - h.most1.4.6.all$counts)
plot(h.entropy1.4.6.all$counts - h.most1.4.6.all$counts,type='o')
h.entropy1.4.6.all$counts - h.most1.4.6.all$counts
plot(h.entropy1.4.6.all$counts - h.most1.4.6.all$counts,type='o',xlab='Move', ylab='Entropy - Most Parts',main='Difference')
postscript('dif-46.eps',horizontal=F,width=4,height=4,paper='special')
plot(h.entropy1.4.6.all$counts - h.most1.4.6.all$counts,type='o',xlab='Move', ylab='Entropy - Most Parts',main='Difference')
dev.off()
h.entropy1.4.6.all$counts * c(1,7)
h.entropy1.4.6.all$counts
cumsum(h.entropy1.4.6.all$counts * c(1, 7) )
cumsum(h.most1.4.6.all$counts * c(1, 7) )
 cumsum(h.most1.4.6.all$counts)
 cumsum(h.entropy1.4.6.all$counts)
summary(entropy1.4.6.all)
summary(most1.4.6.all)
49236/12960
h.most1.4.6.all$counts * c(1, 7)
h.most1.4.6.all$counts 
 >tapply(X=(h.most1.4.6.all$counts), INDEX=c(1,7)), FUN=multiply)
tapply(X=(h.most1.4.6.all$counts), INDEX=c(1,7)), FUN=multiply)
tapply(X=(h.most1.4.6.all$counts), INDEX=c(1,7), FUN=multiply)
tapply(X=(h.most1.4.6.all$counts), INDEX=c(1,7), FUN=*)
tapply(X=(h.most1.4.6.all$counts), INDEX=c(1,7), FUN=prod)
h.most1.4.6.all$counts
c(1,7)
c(1:7)
h.most1.4.6.all$counts * c(1: 7)
h.entropy1.4.6.all$counts * c(1: 7)
cumsum( h.entropy1.4.6.all$counts * c(1: 7))
cumsum( h.most1.4.6.all$counts * c(1: 7))
 h.most1.4.6.all$counts
 h.entropy1.4.6.all$counts
 postscript('score-dif-46.eps',horizontal=F,width=4,height=4,paper='special')
dev.off()
h.most.48.c
sumsum(h.entropy.48.c$counts * c(1: 8) )
cumsum(h.entropy.48.c$counts * c(1: 8) )
cumsum(h.most.48.c$counts * c(1: 8) )
 postscript('score-dif-48.eps',horizontal=F,width=4,height=4,paper='special')
dev.off()
 postscript('score-dif-48.eps',horizontal=F,width=4,height=4,paper='special')
dev.off()
cset.prob.most.48.c <- read.csv('cset-prob-most-4-8-c.dat')
postscript('prob-secret-48.eps',horizontal=F,width=4,height=4,paper='special')
dev.off()
wilcox.test(entropy1.4.6.all$Played, most1.4.6.all$Played,paired=T)
postscript('histo-me.eps',horizontal=F,width=4,height=4,paper='special')
dev.off()
postscript('dif-46.eps',horizontal=F,width=4,height=4,paper='special')
plot(h.entropy1.4.6.all$counts - h.most1.4.6.all$counts,type='o',xlab='Move', ylab='Entropy - Most Parts',main='Difference', sub='l=4, c=6')
dev.off()
plot(h.entropy1.4.6.all$counts - h.most1.4.6.all$counts,type='o',xlab='Move', ylab='Entropy - Most Parts',main='Difference', sub='l=4, c=6')
57106/12960
summary(entropy1.4.6.x30)
summary(most1.4.6.x30)
postscript('prob-me-46.eps',horizontal=F,width=4,height=4,paper='special')
dev.off()
quit()
y
postscript('histo-me-4-8.eps',horizontal=F,width=4,height=4,paper='special')
dev.off()
summary(entropy.48.c$Played)
summary(most.48.c$Played)
wilcox.test(most.48.c$Played,entropy.48.c$Played)
sd(most.48.c$Played)/sqrt(5000)
plot(h.entropy.48.c$counts - h.entropy.48.c$counts,type='o',xlab='Move', ylab='Entropy - Most Parts',main='Difference', sub='l=4, c=8')
plot(h.entropy.48.c$counts - h.most.48.c$counts,type='o',xlab='Move', ylab='Entropy - Most Parts',main='Difference', sub='l=4, c=8')
postscript('dif-48.eps',horizontal=F,width=4,height=4,paper='special')
plot(h.entropy.48.c$counts - h.most.48.c$counts,type='o',xlab='Move', ylab='Entropy - Most Parts',main='Difference', sub='l=4, c=8')
dev.off()
cumsum(h.most.48.c$counts * c(1: 8) )
cumsum(h.entropy.48.c$counts * c(1: 8) )
postscript('prob-me-48.eps',horizontal=F,width=4,height=4,paper='special')
dev.off()
postscript('prob-me-48.eps',horizontal=F,width=4,height=4,paper='special')
dev.off()
quit()
y
