2012-09-29  Juan J. Merelo Guervós  <jjmerelo@gmail.com>

	* conf-evo-6-9-p2k-cs200-r075-x8-p1-m1-t7.yaml (Method): Takes a
	bit more


real	1551m51.803s
user	1550m41.990s
sys	0m6.510s


2012-09-28  Juan J. Merelo Guervós  <jjmerelo@gmail.com>

	* conf-ee-6-9-p2k-cs200-r075-x8-p1-m1-t7.yaml (ID): 
	
real	1488m46.299s
user	1487m39.810s
sys	0m7.620s

	Not bad. Better than before. Let's try with normal Evo.

2012-09-24  Juan J. Merelo Guervós  <jjmerelo@gmail.com>

	* conf-evo-6-10-p1k-cs10-r075-x8-p1-m1-t7.yaml (Method_options):
	Trying with this size; 800 is too small and search gets stuck. 


	real	391m7.568s
user	390m42.020s
sys	0m3.140s

	Not bad.

2012-09-23  Juan J. Merelo Guervós  <jjmerelo@gmail.com>

	* conf-ee-5-8-p600-cs100-r075-x8-p1-m1-t7.yaml (ID): Best results
	so far: 

	> summary(jj.58.ee2.p600.cs100)
  Evaluations        Played    
 Min.   :    0   Min.   :1.00  
 1st Qu.:11490   1st Qu.:5.00  
 Median :15570   Median :6.00  
 Mean   :15291   Mean   :5.57  
 3rd Qu.:19200   3rd Qu.:6.00  
 Max.   :39450   Max.   :8.00  

	Not as good as BS, however. Difference is significant only at the
	90% level with Cs=40

2012-09-22  Juan J. Merelo Guervós  <jjmerelo@gmail.com>

	* conf-evo-6-9-p800-cs10-r075-x8-p1-m1-t7.yaml (Method_options):
	Testing new configurations with a small consistent set. 

	* conf-ee-5-8-p600-cs10-r075-x8-p1-m1-t7.yaml (ID): 

	Good results: 

	real	83m23.152s
user	83m13.590s
sys	0m5.300s


2012-09-20  Juan J. Merelo Guervós  <jjmerelo@gmail.com>

	* conf-ee-5-8-p600-cs200-r075-x8-p1-m1-t7.yaml (Method_options): 
	Results for this one real	401m3.643s
user	400m40.070s
sys	0m4.370s
jmerelo@penny:~/proyectos/CPAN/Algorithm_Mastermind/app$ time ./run_experiment_instances.pl conf-ee-5-8-p600-cs200-r075-x8-p1-m1-t7.yaml  instancias5_8.txt 

	

	* conf-ee-5-8-p600-cs80-r075-x8-p1-m1-t7.yaml (Method_options): 
	real	170m51.932s
user	170m43.650s
sys	0m1.860s

	Almost the same than the simple Evo method. Less evaluations,
	takes a bit more time each one. 

2012-09-19  Juan J. Merelo Guervós  <jjmerelo@gmail.com>

	* conf-evo-5-8-p800-cs80-r075-x8-p1-m1-t7.yaml (Method_options): 

	real	242m42.017s
user	242m23.070s
sys	0m0.700s
jmerelo@penny:~/proyectos/CPAN/Algorithm_Mastermind/app$ time ./run_experiment_instances.pl conf-evo-5-8-p800-cs80-r075-x8-p1-m1-t7.yaml instancias5_8.txt 

	real	385m22.875s
user	384m54.350s
sys	0m8.550s
jmerelo@penny:~/proyectos/CPAN/Algorithm_Mastermind/app$ time ./run_experiment_instances.pl conf-evo-5-8-p600-cs200-r075-x8-p1-m1-t7.yaml  instancias5_8.txt 

	

2012-09-18  Juan J. Merelo Guervós  <jjmerelo@gmail.com>

	* EvoStar13/log-5-8-p600-cs60-r075-x8-p1-m1-t7-Evo-2012-09-18T15:59:07.yaml: 
Changed to 60:
	real	151m1.022s
user	150m44.300s
sys	0m0.430s

	Consistent set size has an influence on the number of evaluations,
	but probably little on real performance.
	

	* EvoStar13/log-5-8-p600-cs80-r075-x8-p1-m1-t7-Evo-2012-09-18T07:17:54.yaml
	(code): Starting new experiments. Time
	real	170m0.887s
user	169m52.850s
sys	0m1.230s


2012-06-28  Juan J. Merelo Guervós  <jjmerelo@gmail.com>

	* IEEE-CIG/conf-plus2-4-8-ABCA.yaml (Method_options): Testing with
	different start combination to see the influence. 

2012-06-13  Juan J. Merelo Guervós  <jjmerelo@gmail.com>

	* IEEE-CIG/conf-plus-5-6.yaml (Method_options): 
	real	845m20.914s
user	844m26.620s
sys	0m15.700s

	A bit more than entropy. Curious. 

2012-06-12  Juan J. Merelo Guervós  <jjmerelo@gmail.com>

	* IEEE-CIG/conf-entropy1-5-6.yaml (Method_options): 
	Terminado:
	real	835m35.037s
user	834m55.900s
sys	0m7.320s

	Time grows more or less lineally with search space size. 

2012-06-10  Juan J. Merelo Guervós  <jjmerelo@gmail.com>

	* run_experiment_all.pl: Re.running experiments to obtain the
	probability of the winning combination being among the chosen. 

	* IEEE-CIG/conf-entropy1-4-8.yaml (ID): real	471m0.751s
user	470m31.340s
sys	0m6.500s

	a bit longer than usual, which probably implies it's worse. 

2012-06-09  Juan J. Merelo Guervós  <jjmerelo@gmail.com>

	* IEEE-CIG/conf-evo-4-8-p400-cs100-r075-x8-m1.yaml (ID): 
	Took much less than expected:
	real	96m5.908s
user	95m58.700s
sys	0m0.990s

	But three times as much as before.

	* IEEE-CIG/conf-evo-4-8-p300-cs20-r075-x8-m1.yaml (ID): 
	Results:
	real	39m41.657s
user	39m33.490s
sys	0m5.320s

	Much faster than exhaustive, obviously...

	* IEEE-CIG/conf-most1-4-8.yaml (Method_options): Running this
	again to get consistent set size right
	(ID): 
	real	462m19.747s
user	461m56.540s
sys	0m5.540s

	Not too important, just for the record. 

2012-06-08  Juan J. Merelo Guervós  <jjmerelo@gmail.com>

	* IEEE-CIG/conf-plus-5-8.yaml (ID): Testing this, but I'm afraid
	it's going to take a long time. 

	* IEEE-CIG/conf-plus-4-6.yaml (ID): 
	
real	89m54.275s
user	89m49.040s
sys	0m1.010s

	less than usual, but not too much.
	
	* IEEE-CIG/conf-plus-4-8.yaml (Method_options): 
	
real	459m21.295s
user	458m58.880s
sys	0m4.650s

	Not too much. Actually, less than usual. Results better than
	usual, actually...
	
2012-06-07  Juan J. Merelo Guervós  <jjmerelo@gmail.com>

	* IEEE-CIG/conf-evod-4-6-p200-r075-x8-t7-m3.yaml (Method_options): 
	Time needed:
	real	784m26.065s
user	783m33.170s
sys	0m11.170s


2012-06-06  Juan J. Merelo Guervós  <jjmerelo@gmail.com>

	* IEEE-CIG/conf-evod-4-6-p100-r075-x8-t7-m3.yaml (Method_options):
	Testing now with less population. Problem: gets stuck some times.

2012-06-05  Juan J. Merelo Guervós  <jjmerelo@gmail.com>

	* IEEE-CIG/conf-evod-4-6-p300-r075-x8-t7-m1.yaml (Method_options):
	Takes too long with m3 (max-generations-equal). Reduced to 1 (only
	two generations). Will test with 3 tonight. 

	real	513m9.719s
user	512m35.770s
sys	0m12.920s

	With 3 
	real	886m39.428s
user	885m28.410s
sys	0m19.650s

	Obviously, there can't be a big improvement...

	* IEEE-CIG/conf-combined-4-8.yaml (Method_options): 
Result: 
	real	460m56.624s
user	460m34.840s
sys	0m3.120s


2012-06-04  Juan J. Merelo Guervós  <jjmerelo@gmail.com>

	* ../lib/Algorithm/MasterMind/Partition_Entropy_1st.pm: Running
	again after bug found in first version. 

	* IEEE-CIG/conf-combined-4-6.yaml (Method): Trying this one that
	combines Entropy and most; entropy seems to reduce more the
	initial size of the consistent set size, but Most reduces it more
	afterwards, so let's combine both. 

	> tapply(X=(cset.entropy.4.6$Played), INDEX=list(cset.entropy.4.6$Evaluations), FUN=mean)
         1          2          3          4          5 
185.410811  23.069046   3.118054   1.128793   1.000000 
> tapply(X=(cset.most.4.6$Played), INDEX=list(cset.most.4.6$Evaluations), FUN=mean)
         1          2          3          4          5          6 
185.410811  23.964618   3.422150   1.172143   1.028630   1.000000 

	For the time being, it looks fast...

2012-06-03  Juan J. Merelo Guervós  <jjmerelo@gmail.com>

	* IEEE-CIG/conf-evoc-4-6-p300-cs20-r075-x8-t7.yaml (ID): Testing
	the new configuration with boosted initial consistent set:
	real	100m26.549s
user	100m18.700s
sys	0m2.110s

	Much slower this way... When set to 10:
	
	real	364m17.528s
user	363m54.710s
sys	0m4.060s


	* IEEE-CIG/conf-evo-4-6-p300-cs20-r075-x8-t7.yaml (ID): Testing
	the first evolutionary method to reproduce former results and
	re-establish evolutionary baseline. 
	Wow, that was fast:
	real	56m40.216s
user	56m33.430s
sys	0m2.370s

	Faster than exhaustive (which should be expected). Let's see if
	it's better.

	* run_experiment_all.pl: Testing exhaustive search for the sake of
	comparison: 

	Entropy1
	
real	93m44.217s
user	93m36.490s
sys	0m1.910s

	Most1:
	real	93m18.826s
user	93m12.460s
sys	0m1.080s


	Almost the same. Results can't be too different.
	
2012-06-02  Juan J. Merelo Guervós  <jjmerelo@gmail.com>

	* IEEE-CIG/conf-entropy1-4-8.yaml (ID): Time taken:
	real	469m22.451s
user	468m58.520s
sys	0m3.190s


2012-06-01  Juan J. Merelo Guervós  <jjmerelo@gmail.com>

	* IEEE-CIG/conf-most1-4-6.yaml (ID): Running again to count the
	number of moves correctly. 
	real	36m41.627s
user	36m38.520s
sys	0m0.420s

	Time is more or less the same. And for entropy1
	real	36m54.195s
user	36m51.220s
sys	0m0.630s

	Almost exactly the same.

	* run_experiment_instances.pl: Fixing a bug counting the number of
	moves (it counted 2 when the combination was found in the first
	move) and running again entropy1 with a changed first move (ABCD).

	* IEEE-CIG/conf-entropy-4-6.yaml (ID): This one really takes a
	long time: 
	real	1507m51.227s
user	1506m23.890s
sys	0m13.900s

	Bit more than most-parts, indeed. Maybe simply due to the small
	additional complication (but, then, 10% more?)

	* IEEE-CIG/conf-entropy1-4-6.yaml (Method): Testing this new
	version with fixed first move. 

	real	34m42.293s
user	34m39.940s
sys	0m0.200s

	Almost the same as most-parts.

2012-05-31  Juan J. Merelo Guervós  <jjmerelo@gmail.com>

	* IEEE-CIG/conf-most1-4-6.yaml (Method): Testing this, result:
	real	33m42.703s
user	33m37.910s
sys	0m0.690s

	Obviously much better. Let's see the average.

	* IEEE-CIG/conf-most-4-6.yaml (ID): 

	Takes _really_ a long time 
	Finished

real	1464m22.442s
user	1463m2.620s
sys	0m12.530s


2012-05-29  Juan J. Merelo Guervós  <jjmerelo@gmail.com>

	* IEEE-CIG/conf-most-4-6.yaml (ID): Testing new exhaustive search
	algorithm for speed and moves. 

2012-05-28  Juan J. Merelo Guervós  <jjmerelo@gmail.com>

	* IEEE-CIG/conf-evo-8-12-p20k-cs1k-r075-x8-m1-t7.yaml (ID):
	Results not too good: 
	real	5969m43.519s
user	5212m43.540s
sys	59m35.310s

	and worse average than before:
	  Evaluations          Played      
 Min.   : 319996   Min.   : 6.000  
 1st Qu.:1143750   1st Qu.: 8.000  
 Median :1536184   Median : 9.000  
 Mean   :1676645   Mean   : 8.586  
 3rd Qu.:2022984   3rd Qu.: 9.000  
 Max.   :4895320   Max.   :12.000  

	More stuff is no solution.

2012-05-24  Juan J. Merelo Guervós  <jjmerelo@gmail.com>

	* IEEE-CIG/conf-evo-8-12-p10k-cs1k-r075-x8-m1-t7.yaml (ID): 
	Results (not for this one) 
	
	real	3699m56.809s
user	3697m4.740s
sys	0m18.580s
jmerelo@penny:~/proyectos/CPAN/Algorithm_Mastermind/app$ time ./run_experiment_instances.pl IEEE-CIG/conf-evo-8-12-p10k-cs1k-r075-x8-m1-t7.yaml samples8_12.txt 


2012-05-19  Juan J. Merelo Guervós  <jjmerelo@gmail.com>

	* IEEE-CIG/conf-evo-8-12-p10k-cs1k-r075-x8-m1-t7.yaml
	(Method_options): Previous one took too long (more than 20
	minutes). Let's try this one until we refactor and see what can be
	fixed. 

	* IEEE-CIG/conf-evo-8-12-p8k-cs2k-r075-x8-m1-t7.yaml
	(Method_options): 
	Let's try duplicating consistent set size to get closer to
	Berghman's (even if this one is with only 100 combinations, not 500)

	* IEEE-CIG/conf-evo-8-12-p8k-cs1k-r075-x8-m1-t7.yaml (ID): 
	This one really takes a long time:
	real	3917m51.488s
user	3915m26.890s
sys	0m28.560s
twice as much (or more), probably due to the bigger consistent set size. 

2012-05-16  Juan J. Merelo Guervós  <jjmerelo@gmail.com>

	* IEEE-CIG/conf-evo-8-12-p10k-cs500-r075-x8-m1-t7.yaml (ID):
	Finished first whole run with this size:
	real	1683m10.634s
user	1683m25.940s
sys	0m20.860s


2012-05-07  Juan J. Merelo Guervós  <jjmerelo@gmail.com>

	* IEEE-CIG/conf-evo-6-9-p1k-cs100-r075-x8-m1-t7.yaml (ID): 
	Eliminating permutation yields good results:

	real	662m5.204s
user	680m5.860s
sys	2m39.980s

and speeds up, just a bit...
	
2012-05-01  Juan J. Merelo Guervós  <jjmerelo@gmail.com>

	* CIG/conf-evo-5-8-p600-cs40-r075-x8-p1-m1-t7.yaml (ID): 
	Best results so far, from the speed point of view: real	
(ID): real	125m13.586s
user	125m6.150s
sys	0m0.560s


	Let's check the number of moves. Good, but not perfect:

	> summary(evo.4.8.p300.cs30.r075.x8.p1.m1.t7)
  Evaluations        Played     
 Min.   :   48   Min.   :2.000  
 1st Qu.: 2949   1st Qu.:5.000  
 Median : 4575   Median :5.000  
 Mean   : 4510   Mean   :5.161  
 3rd Qu.: 6000   3rd Qu.:6.000  
 Max.   :13500   Max.   :9.000 
	

	* CIG/conf-evo-5-9-p800-cs80-r075-x8-p1-m1-t7.yaml
	(Method_options): 
	real	236m39.588s
user	236m22.550s
sys	0m1.970s
jmerelo@penny:~/proyectos/CPAN/Algorithm_Mastermind/app$ mv log-5-9-p800-cs80-r075-x8-p1-m1-t7-Evo-2012-04-30T17\:43\:10.yaml CIG/

	These are the results. I have not kept the previous ones, but
	looks good. 

2012-04-30  Juan J. Merelo Guervós  <jjmerelo@gmail.com>

	* CIG/conf-evo-6-9-p1k-cs100-r075-x8-p1-m1-t7.yaml
	(Method_options): Previous version had permutation wrong. Changing
	in this one (but I'm afraid it will not have much influence)

	* CIG/conf-evo-6-9-p1k-cs100-r075-x8-p1-m1-t3.yaml
	(Method_options): This one obtained much better results than
	previous version, in half the time:
	real	704m11.598s
user	704m52.180s
sys	0m7.750s
> 42251/5000
[1] 8.4502

	seconds per game. Much better... But already too late for this
	version of the paper.

2012-04-29  Juan J. Merelo Guervós  <jjmerelo@gmail.com>

	* CIG/conf-evo-6-9-p1k-cs100-r075-x8-p1-m1-t3.yaml
	(Method_options): 
	Results with the previous version of this: 
	
real	1614m44.566s
user	1613m11.690s
sys	0m13.270s

	19.35820000000000000000 per game. Not bad, not great either. 

	* CIG/conf-evo-4-8-p400-cs30-r025-x8-p1-m1.yaml (Method_options):
	Problems here: I was using crossover_rate instead of xover_rate
	for that parameter, which means that xover had default value all
	over. Not a big deal, since results were not that bad, but it
	would be interesting to see if this new value really has an
	effect. 

2012-04-28  Juan J. Merelo Guervós  <jjmerelo@gmail.com>

	* CIG/conf-evo-5-8-p600-cs40-r075-x8-p1-m1.yaml (Method_options):
	Fixed error in this conf file, mutation was set to 1 and
	permutation to 0.

2012-04-19  Juan J. Merelo Guervós  <jjmerelo@gmail.com>

	* CIG/conf-evo-4-8-p400-x8-p1-m1-r075-cs30.yaml (Method_options): 
	real	47m55.033s
user	48m20.280s
sys	0m0.700s
jmerelo@penny:~/proyectos/CPAN/Algorithm_Mastermind/app$ time
	./run_experiment_instances.pl
	CIG/conf-evo-4-8-p400-x8-p1-m1-r075-cs30.yaml 

	Best so far, from time POV. 

2012-04-18  Juan J. Merelo Guervós  <jjmerelo@gmail.com>

	* CIG/conf-evo-4-8-p400-x8-p1-m1-r075-cs30.yaml (ID): 
	Results with this one:
	(Method_options): Made a mistake here. Now will run with real
	values. However, results were a bit better than before. 

	real	71m2.808s
user	70m54.570s
sys	0m1.430s

	From the get-go, it's slower. Let's look at numbers.

	* CIG/conf-evo-4-8-p512.yaml (ID): OK, let's start writing an
	experiment logl. I am testing this new file just to get a grasp of
	how everything works. First results:

	
real	54m14.953s
user	54m18.680s
sys	0m4.960s

